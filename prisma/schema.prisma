// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pulverizacion {
  id              String            @id @unique @default(uuid())
  fecha           DateTime
  detalle_id      String
  detalle         Detalle           @relation(fields: [detalle_id], references: [id], onDelete: Cascade)
  productos       Producto[]        @relation("PulverizacionProductos")
  Aplicacion      Aplicacion[]
  ConsumoProducto ConsumoProducto[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model Detalle {
  id             String          @id @unique @default(uuid())
  campo_id       String          @default("-")
  campo          Campo           @relation(fields: [campo_id], references: [id], onDelete: SetDefault)
  lotes          String[]
  hectareas      Float
  cultivo_id     String          @default("-")
  cultivo        Cultivo         @relation(fields: [cultivo_id], references: [id], onDelete: SetDefault)
  tratamiento_id String          @default("-")
  tratamiento    TipoTratamiento @relation(fields: [tratamiento_id], references: [id], onDelete: SetDefault)
  Pulverizacion  Pulverizacion[]
}

enum UNIDAD {
  LITROS
  GRAMOS
}

model Producto {
  id              String            @id @unique @default(uuid())
  nombre          String
  unidad          UNIDAD
  cantidad        Float
  pulverizaciones Pulverizacion[]   @relation("PulverizacionProductos")
  Aplicacion      Aplicacion[]
  ConsumoProducto ConsumoProducto[]
}

model Aplicacion {
  id               String        @id @unique @default(uuid())
  pulverizacion_id String
  pulveriacion     Pulverizacion @relation(fields: [pulverizacion_id], references: [id], onDelete: Cascade)
  producto_id      String        @default("-")
  producto         Producto      @relation(fields: [producto_id], references: [id], onDelete: SetDefault)
  dosis            Float
}

model ConsumoProducto {
  id               String        @id @unique @default(uuid())
  pulverizacion_id String
  Pulverizacion    Pulverizacion @relation(fields: [pulverizacion_id], references: [id], onDelete: Cascade)
  producto_id      String        @default("-")
  producto         Producto      @relation(fields: [producto_id], references: [id], onDelete: SetDefault)
  valor_teorico    Float
  valor_real       Float?
  valor_devolucion Float?
}

model Campo {
  id        String    @id @unique @default(uuid())
  nombre    String
  hectareas Float
  Detalle   Detalle[]
  Lote      Lote[]
}

model Lote {
  id         String       @id @unique @default(uuid())
  nombre     String
  color      String
  campo_id   String
  campo      Campo        @relation(fields: [campo_id], references: [id], onDelete: Cascade)
  Coordinada Coordinada[]
}

model Coordinada {
  id      String @id @unique @default(uuid())
  lat     Float
  lng     Float
  lote_id String
  lote    Lote   @relation(fields: [lote_id], references: [id], onDelete: Cascade)
}

model Cultivo {
  id      String    @id @unique @default(uuid())
  nombre  String
  Detalle Detalle[]
}

model TipoTratamiento {
  id      String    @id @unique @default(uuid())
  nombre  String
  Detalle Detalle[]
}

model Usuario {
  id             String   @id @unique @default(uuid())
  nombre_usuario String   @unique
  contrasena     String
  nombre         String
  apellido       String
  Sesion         Sesion[]
}

model Sesion {
  id           String   @id @unique @default(uuid())
  usuario_id   String
  usuario      Usuario  @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
  access_token String?  @unique
  refesh_token String?  @unique
  createdAt    DateTime @default(now())
  expireIn     DateTime
  updatedAt    DateTime @updatedAt
}
